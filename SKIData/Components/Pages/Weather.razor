@page "/weather"
@rendermode InteractiveServer
@inject Service.WeatherService WeatherService
<h1>Weather</h1>

<p>This page shows data about the weather.</p>

<div class="d-flex align-items-center gap-2">
    <button class="btn btn-primary" @onclick="LoadSample">Load sample data</button>
    <input type="text" class="form-control" placeholder="Enter region or zip" style="max-width: 300px;" @bind="Userinput" />
</div>

@if (weather is null)
{
    <p><em>No weather loaded.</em></p>
}
else
{
    <div class="card mt-3" style="max-width:640px">
        <div class="card-body">
            <h5 class="card-title">@weather.region, @weather.country</h5>
            <p class="card-subtitle text-muted mb-2">Last updated: @weather.last_updated</p>

            <table class="table table-sm mt-3 mb-0">
                <tbody>
                    <tr>
                        <th scope="row">Temperature (°F)</th>
                        <td>@weather.temp_f</td>
                    </tr>
                    <tr>
                        <th scope="row">Feels like (°F)</th>
                        <td>@weather.feelslike_f</td>
                    </tr>
                </tbody>
            </table>

            <div class="mt-3">
                <button class="btn btn-secondary me-2" @onclick="Clear">Clear</button>
            </div>
        </div>
    </div>
}

@code {
    private Model.WeatherModel weather;
    private string Userinput;

    private async Task LoadSample()
    {
        weather = await WeatherService.GetRealTimeWeather(string.IsNullOrWhiteSpace(Userinput) ? "Silverthorne" : Userinput);
    }

    private void Clear()
    {
        weather = null;
        Userinput = string.Empty;
    }
}
